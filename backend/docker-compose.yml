services:
  backend:
    build: .
    container_name: pm-backend
    ports:
      - "${BACKEND_PORT}:${PORT}"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
    volumes:
      - .:/app
    command: >
      sh -c "npx prisma migrate deploy && npm start"
    networks:
      - backend-network

  postgres:
    image: postgres:15
    container_name: pm-postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 2s
      retries: 20
    networks:
      - backend-network

  prisma-studio:
    image: node:18-alpine
    container_name: prisma-studio
    working_dir: /app
    volumes:
      - .:/app
    ports:
      - "${STUDIO_PORT}:5555"
    environment:
      - DATABASE_URL=${DATABASE_URL}
    command: >
      sh -c "npm install && npx prisma generate && npx prisma studio --port 5555 --browser none"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend-network
    profiles:
      - studio

  test-postgres:
    image: postgres:15
    container_name: pm-postgres-test
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_pass
      POSTGRES_DB: test_db
    ports:
      - "5435:5432"
    volumes:
      - pgdata-test:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d test_db"]
      interval: 5s
      timeout: 2s
      retries: 10
    networks:
      - backend-network
    profiles:
      - tests

  backend-tests:
    build: .
    container_name: pm-backend-tests
    environment:
      - DATABASE_URL=postgresql://test_user:test_pass@test-postgres:5432/test_db?schema=public
      - JWT_ACCESS_SECRET=test_access_secret
      - JWT_REFRESH_SECRET=test_refresh_secret
      - NODE_ENV=test
      - PORT=5005
    volumes:
      - .:/app
    working_dir: /app
    command: >
      sh -c "echo 'Running integration tests...' &&
            npx prisma generate &&
            npx prisma migrate deploy &&
            npm run test:integration"
    depends_on:
      test-postgres:
        condition: service_healthy
    networks:
      - backend-network
    profiles:
      - tests

volumes:
  pgdata:
  pgdata-test:

networks:
  backend-network:
