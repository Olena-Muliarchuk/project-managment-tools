tags:
  - name: Tasks
    description: Task CRUD operations

paths:
  /tasks:
    post:
      tags:
        - Tasks
      summary: Create a new task
      description: Create a new task (Manager only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
      responses:
        '201':
          description: Task created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid request
        '403':
          description: Access denied (only managers)
    get:
      tags:
        - Tasks
      summary: Get all tasks
      description: Get all tasks (Protected access)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '403':
          description: Access denied

  /tasks/{id}:
    get:
      tags:
        - Tasks
      summary: Get task by ID
      description: Returns task by ID (Protected)
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TaskIdParam'
      responses:
        '200':
          description: Task found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
    put:
      tags:
        - Tasks
      summary: Update a task
      description: Update task by ID (Protected)
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TaskIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
      responses:
        '200':
          description: Task updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '403':
          description: Access denied
        '404':
          description: Task not found
    delete:
      tags:
        - Tasks
      summary: Delete a task
      description: Delete task by ID (Protected)
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TaskIdParam'
      responses:
        '200':
          description: Task deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  deletedTask:
                    $ref: '#/components/schemas/Task'
        '403':
          description: Access denied
        '404':
          description: Task not found

components:
  parameters:
    TaskIdParam:
      name: id
      in: path
      required: true
      description: Task ID
      schema:
        type: integer
        example: 1

  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: Task Title
        description:
          type: string
          example: Task description here
        projectId:
          type: integer
          example: 1
        assignedToId:
          type: integer
          example: 2
        createdById:
          type: integer
          example: 3
        createdAt:
          type: string
          format: date-time
          example: '2024-07-13T12:00:00.000Z'
        updatedAt:
          type: string
          format: date-time
          example: '2024-07-13T12:00:00.000Z'

    TaskCreate:
      type: object
      required:
        - title
        - projectId
        - createdById
      properties:
        title:
          type: string
          example: New Task
        description:
          type: string
          example: Description of the task
        projectId:
          type: integer
          example: 1
        assignedToId:
          type: integer
          example: 2
        createdById:
          type: integer
          example: 3

    TaskUpdate:
      type: object
      properties:
        title:
          type: string
          example: Updated Task Title
        description:
          type: string
          example: Updated description text
        assignedToId:
          type: integer
          example: 4
